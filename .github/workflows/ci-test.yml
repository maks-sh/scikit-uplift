name: Python package

on:
  push:
    branches: [ master ]
  pull_request_target:

  workflow_dispatch:

jobs:
  test:
    name: Check tests
    runs-on: ${{ matrix.os }}
    env:
      USING_COVERAGE_PY: '3.8'
      USING_COVERAGE_OS: 'ubuntu-latest'

    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and lints
      run: pip install . -r test_requirements.txt -r requirements.txt
    - name: Run PyTest
      run: pytest | tee pytest-coverage.txt
    - name: Comment coverage
      if: github.event_name == 'pull_request_target' && contains(env.USING_COVERAGE_PY, matrix.python-version) && contains(env.USING_COVERAGE_OS, matrix.os)
      uses: MishaKav/pytest-coverage-comment@v1.1.5
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml

  check_sphinx_build:
    name: Check Sphinx build for docs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: pip install -r docs/requirements.txt
    - name: Run Sphinx
      run: sphinx-build -b html docs /tmp/_docs_build